/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1==null&&l2==null)return null; 
        
        ListNode head = new ListNode(0); 
        ListNode point = head; 
        int c= 0; 
        
        
        while(l1!=null&l2!=null){
            int sum = l1.val+l2.val+c; 
            c=sum/10; 
            point.next=new ListNode(sum%10); //point better points a non-null node. Here, directly pointing a node with value is good. 
            l1=l1.next; 
            l2=l2.next;
            point=point.next; 
        }
        ListNode l = (l1==null)? l2:l1; 
        while(l!=null){
            int sum = l.val + c; 
            c=sum/10; 
            point.next=new ListNode(sum%10); 
            l=l.next; 
            point=point.next; 
        }
        if(c!=0) point.next = new ListNode(c); 
        return head.next;
        
    }
}
