/* Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.
* The input string does not contain leading or trailing spaces and the words are always separated by a single space.
*
* For example,
* Given s = "the sky is blue",
* return "blue is sky the".
*
* Do it in place. 
* 
* Solution: 
* 
*
* History:
*
*/ 

public class Solution {
    public void reverseWords(char[] s) {
        if (s==null || s.length==0) {
            return;
        }
        
        // Reverse the individual word except the last one
        // because of no trailing space
        int start = 0;
        for (int i=0; i<s.length; i++) {
            if (s[i] == ' '){
                reverse (s, start, i-1);
                start = i+1; 
            }
        }
        
        // Reverse the array  - "eulb si yks"
        if (start != 0) {
            // Reverse the last word
            reverse (s, start, s.length-1);
            // Reverse the sentence
            reverse (s, 0, s.length-1);
        }
        return;
    }
    
    // Reverse an array or some piece of an array
    public void reverse (char[] s, int start, int end) {
        while (start < end) {
            char temp = s[start]; 
            s[start] = s[end]; 
            s[end] = temp; 
            ++start; 
            --end;
        }
    }
}
