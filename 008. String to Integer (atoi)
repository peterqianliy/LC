/* Implement atoi to convert a string to an integer. 
* ----- Spoiler Alert -----
* 1. Discard heading whitespaces.
* 2. Convert integral piece if it's the first non-whitespace occurrence.
* 3. Discard trailing part whatever it is.
* 4. Return Integer.MAX_VALUE or Integer.MIN_VALUE if exceeds the range.
*  
* Solution 
* 1. Naive implementation 
*
* History
* 10/14 myAtoi_1014 Saw spoiler, missed test cases exceeding Long range with 384ms
* 01/16 myAtoi Saw spoiler, missed test cases exceeding Long range with 4ms
*       Note, do not use "i++" in "if (..)"
*/

public class Solution {
    public int myAtoi(String str) {
        if (str==null || str.length()==0) {
            return 0;
        }
        
        // Get rid of heading whitespaces
        int i = 0; 
        while (i<str.length() && str.charAt(i)==' ') {
            i++;
        }
        if (i == str.length()){
            return 0;
        }
        
        long rst = 0; 
        int polar = 1; 
        char ch = str.charAt (i);
        if ((ch=='-') || (ch=='+')){
            polar = (ch=='-')? -1: 1; 
            if (++i==str.length()){
                return 0;
            }
        }
        
        while (i<str.length() && str.charAt(i)>='0' && str.charAt(i)<='9'){
            rst = rst*10 + (str.charAt(i)-'0')*polar;
            if (rst>Integer.MAX_VALUE) {
                return Integer.MAX_VALUE;
            }else if (rst<Integer.MIN_VALUE) {
                return Integer.MIN_VALUE;
            }
            i++;
        }
        
        return (int)rst;
    }

    public int myAtoi_1014(String str) {
        if (str==null || str.length()==0){
            return 0;
        }
    
        long sum = 0;
        int flag = 1; 
        int len = 0; 
        
        str = str.trim(); 
        for (int i=0; i<str.length(); i++){
            char ch = str.charAt(i);
            if (i==0){
                if (ch =='-'){
                    flag = -1;
                    continue;
                }else if (ch=='+'){
                    flag = 1; 
                    continue;
                }else if(ch<'0' || ch>'9') { 
                    return 0;
                }else {
                    sum = ch - '0';
                    len++ ; 
                }
             }else{
                if (ch<'0' || ch>'9'){
                    // return 0;
                    // non-numerical char is allow
                    break;
                }else{      
                    sum = sum *10 + (ch - '0');
                    len++;
                }  
            } 
        } 

        sum = sum * flag;
        
        if (len>10){
            if (flag>0){
                return Integer.MAX_VALUE;
            }else if (flag<0){
                return Integer.MIN_VALUE;
            }
        }else {
    
            if (sum > Integer.MAX_VALUE){
                return Integer.MAX_VALUE;
            }else if (sum < Integer.MIN_VALUE){
                return Integer.MIN_VALUE;
            }else{
                return (int)sum;
            }
        }
        // Avoid compile error
        return -1;
    }
}
