/* 
 * 1. Instruction
 *  You are climbing a stair case. It takes n steps to reach to the top.
 *  Each time you can either climb 1 or 2 steps. In how many distinct ways can  *  you climb to the top?
 * 2. Failures:
 *  #1 recursive: time limit exceeded.. -->> iterative, bottom-up: 1) base
 *  case, 2) figure out EVERY step 
 */

public class Solution {
    public int climbStairs(int n) {
        if (n <= 0){
            return 0; 
        }else if (n == 1){
            return 1; 
        }else if (n == 2){
            return 2;
        }
        
        int[] M = new int[n+1];
        M[0] = 0; 
        M[1] = 1; 
        M[2] = 2; 
        for (int i=3; i<n+1; i++){
            M[i] = M[i-2] + M[i-1]; 
        }
        return M[n];
    }
}
