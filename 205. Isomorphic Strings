// 1. Initial: 
//  #1. mapping 
//  #2. char-char mapping, either key or value unique

public class Solution {
    public boolean isIsomorphic(String s, String t) {
        if (s==null || t==null || s.length()!=t.length()){
            return false;
        }
        HashMap<Character, Character> map1 = new HashMap<Character, Character> (); 
        HashMap<Character, Character> map2 = new HashMap<Character, Character> (); 
        for (int i=0; i<t.length(); i++){
            char cht = t.charAt(i); 
            char chs = s.charAt(i);
            if (map1.containsKey(chs)){
                if (map1.get(chs) != cht){
                    return false;
                }
            }else{
                if (map2.containsKey(cht)){
                    if (map2.get(cht) != chs){
                        return false;
                    }
                }else{
                    map2.put(cht, chs);
                }
                map1.put(chs, cht);
            }
        }
        
        // Using one map 
        //HashMap<Character, Character> map = new HashMap<Character, Character> (); 
        //for (int i=0; i<s.length(); i++){
        //    char ss = s.charAt(i); 
        //    char tt = t.charAt(i); 
        //    if (map.containsKey(ss)){
        //        if (!map.get(ss).equals(tt)){
        //            return false;
        //        }
        //    }else {
        //        if (map.containsValue(tt)){
        //           return false;
        //      }else {
        //            map.put(ss, tt);
        //       }
        //    }
        //}
        
        
        return true;
    }
}
