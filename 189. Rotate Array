// 1. Initial Thoughts: Re-ORDERING --> Stack or Queue
//      #1. Array only hold primitive value???
// 2. Failures: 
//      #1. identifier expected --- "You cannot call a method outside a method"
//      #2. return types not compatible: please note the return types. 
//      #3. typos..
//      #4. index out of bound: k larger than nums.length
public class Solution {
    public void rotate(int[] nums, int k) {
        if (nums==null || nums.length==0 ){
            return ; 
        }else if (k == 0){
            return ;
        }
        
        if (k > nums.length){
            k = k%nums.length ;
        }
        
        Queue<Integer> q = new LinkedList<Integer> (); 
        int idx = nums.length - k; 
        while (idx < nums.length){
            q.offer (nums[idx++]);
        }
        idx = 0; 
        while (idx < nums.length-k){
            q.offer (nums[idx++]);
        }
        for (int i=0; i<nums.length; i++){
            nums[i] = q.poll ().intValue(); 
        }
        
        
    }
}
