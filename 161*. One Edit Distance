/* Given two strings S and T, determine if they are both one edit distance apart
*
* Backgound: https://en.wikipedia.org/wiki/Edit_distance
* 
* Solution: 
* 1. Iterate from start to end or from end to start, and find the different char.
*   (Used .substring(), .equals() - #function call many)
*
* History: 
* 01/16 2ms 58% - NEED ENHANCEMENT*
*/

public class Solution {
    public boolean isOneEditDistance(String s, String t) {
        if (s==null || t==null) {
           if ((s==null) && ((t==null)||t.length()==1)) {
               return true;
           }
           if ((t==null) && ((s==null)||s.length()==1)) {
               return true;
           }
           return false;
        }else if (s.length()==0 && t.length()==0) {
            return false;
        }else if (s.length() == 0 && t.length()==1) {
            return true;
        }else if (s.length()==1 && t.length()==0){
            return true;
        }
        
        
        int s1,s2,t1,t2 = 0;
        int count = 0; 
        if (s.length()>t.length()+1 || s.length()<t.length()-1) {
            return false;
        }else if (s.length() == t.length()) {
            if (s.equals(t)) {
                return false;
            }
            for (int i=0; i<s.length(); i++) {
                if (s.charAt(i) != t.charAt(i)) {
                    count++;
                }
            }
            return count==1;
        }else {// Length difference: 1
            if (t.length() > s.length()) {
                String temp = t; 
                t = s; 
                s = temp;
            }
            if (s.charAt(0)!=t.charAt(0) && s.charAt(s.length()-1)!=t.charAt(t.length()-1)) {
                return false ;
            }else if (s.charAt(0)==t.charAt(0)) {
                int idx = -1; 
                for (int i=0; i<t.length(); i++) {
                    if (s.charAt(i) != t.charAt(i)) {
                        idx = i; 
                        break;
                    }
                }
                return (idx==-1) || s.substring (idx+1).equals(t.substring(idx));
            }else {
                int idx = -1; 
                for (int i=s.length()-1,j=t.length()-1; i>=0 && j>=0; i--,j--) {
                    if (s.charAt(i) != t.charAt(j)) {
                        idx = i; 
                        break;
                    }
                }
                return (idx==-1) || s.substring (0,idx).equals(t.substring(0,idx+1));
            }
      
          
        }
    }
}
